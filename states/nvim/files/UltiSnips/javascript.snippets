global !p
def upperfirst(t):
	if len(t) < 2:
		return '' if len(t) < 1 else t.capitalize()
	return t[0].capitalize() + t[1:]
def lowerdash(t):
	return '-'.join([ w.lower() for w in re.findall('[a-z]+|[A-Z]+[a-z]*', t) ])
endglobal

snippet cl "console.log"
console.log(${0});
endsnippet

snippet clv "console.log variable"
console.log('$1:', $1)
endsnippet


# ==========================================
# Hooks and effects
#

snippet useS "useState()" b
const [$1, set$3`!p snip.rv=upperfirst(t[1])`] = useState($2);
endsnippet

snippet useE "useEffect()" b
useEffect(() => {
  $1$0
  return () => {}
}, [$2]);
endsnippet

snippet useC "useContext()" b
const ${1:context} = useContext($2);
endsnippet

snippet useCB "useCallback(fn, inputs)" b
const ${1:callback} = useCallback(($2) => ${3:{
	$4
}}, [$5]);
endsnippet

snippet useR "useRef(defaultValue)" b
const ${1:ref} = useRef(${2:null});
endsnippet

# ==========================================
# React Snippets
#

snippet rfc "function component exported" b
import React from 'react'

export const ${1:`!v expand('%:t:r')`} = () => {
	return null$0
}

endsnippet

